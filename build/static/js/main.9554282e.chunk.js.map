{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/hooks.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","state/actions.ts","hooks/useRefresh.ts","contexts/Localisation/translationsContext.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/constants/types.ts","utils/multicall.ts","config/constants/contracts.ts","utils/addressHelpers.ts","config/constants/pools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","console","log","tokenAmount","BigNumber","div","pow","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","tokenPriceVsQuote","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","leafPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","ZERO","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","useFarms","useSelector","useFarmFromPid","useFarmUser","usePriceBnbBusd","usePriceCakeBusd","useTotalValue","bnbPrice","cakePrice","value","i","length","val","BNB","CAKE","plus","nodes","process","getNodeUrl","randomIndex","random","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","useContext","fastRefresh","defaultTranslationState","translations","setTranslations","TranslationsContext","Container","styled","theme","mediaQueries","sm","Page","lg","PoolCategory","abi","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","cake","56","97","masterChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","getCakeAddress","addresses","chainId","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","pools","nonBnbPools","poolsConfig","filter","p","stakingTokenName","bnbPools","nonMasterPools","sousId","masterChefContract","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","contractAddress","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingLea","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","contracts","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","lightTheme","light","button","primary","backgroundActive","backgroundHover","text","color","tertiary","secondary","subtle","primaryBright","primaryDark","textSubtle","darkTheme","dark","prevState","stringify","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","props","useWallet","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","PageLoader","Home","lazy","Farms","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","fallback","path","exact","tokenMode","component","memo","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","getRpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions"],"mappings":"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","file":"static/js/main.9554282e.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n      console.log({\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      })\n      if (farmConfig.isTokenOnly) {\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\n\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\n          tokenPriceVsQuote = new BigNumber(1)\n          console.log('IF')\n        } else {\n          console.log('else')\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n        console.log({ tokenAmount, tokenPriceVsQuote, lpTotalInQuoteToken })\n      } else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n      }\n\n      const [info, totalAllocPoint, leafPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'leaPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        leafPerBlock: new BigNumber(leafPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingLea',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 1 // EGG-BUSD LP\n  const farm = useFarmFromPid(pid)\n  console.log('farm', farm)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const cakePrice = usePriceCakeBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","export default {\n  cake: {\n    56: '0x0e505a3296a8048132A2d31815F44cEc37aB485D',\n    97: '0x72B8Eb75ecAB5bB8a75adE4605F3ca4C3E73ab63',\n  },\n  masterChef: {\n    56: '0xd164b1552C4eA55F8CF57B32B491fF365C338EeF',\n    // 97: '0xEe867EbE9bCC57485FC6679bbE1042243475Ed21',\n    97: '0x6A63E170ecEA5A60E85D4Bc5874A059C2fBA439c',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0x78867bbeef44f2326bf8ddd1941a4439382ef2a7',\n  },\n}\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   tokenName: 'CAKE',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingLea('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'LEA-BNB LP',\n    lpAddresses: {\n      97: '0x5F4e94ad206e836941B106FB36a141Af334C767B',\n      56: '0xbf20623eC2f2386446fB11F51001301669B9A8d3',\n    },\n    tokenSymbol: 'EGG',\n    tokenAddresses: {\n      97: '0x72B8Eb75ecAB5bB8a75adE4605F3ca4C3E73ab63',\n      56: '0x0e505a3296a8048132A2d31815F44cEc37aB485D',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'LEA-BUSD LP',\n    lpAddresses: {\n      97: '0x1a9e2f5404040e178E663D3853982dA1321A46e0',\n      56: '0x0DF910D3ab7CAFE09f30377Feaa4643DE300474f',\n    },\n    tokenSymbol: 'EGG',\n    tokenAddresses: {\n      97: '0x72B8Eb75ecAB5bB8a75adE4605F3ca4C3E73ab63',\n      56: '0x0e505a3296a8048132A2d31815F44cEc37aB485D',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 2,\n    risk: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '0xe0e92035077c39594793e61802a350347c320cf2',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 3,\n    risk: 1,\n    lpSymbol: 'CAKE-WBNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  // {\n  //   pid: 4,\n  //   risk: 2,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\n  //   },\n  //   tokenSymbol: 'BTCB',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 5,\n  //   risk: 2,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\n  //   },\n  //   tokenSymbol: 'ETH',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 6,\n  //   risk: 1,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 7,\n  //   risk: 1,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 9,\n  //   risk: 3,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n  //   },\n  //   tokenSymbol: 'DOT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 10,\n  //   risk: 4,\n  //   lpSymbol: 'CAKE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458',\n  //   },\n  //   tokenSymbol: 'CAKE',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 11,\n  //   risk: 4,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\n  //   },\n  //   tokenSymbol: 'CAKE',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  {\n    pid: 4,\n    risk: 5,\n    isTokenOnly: true,\n    lpSymbol: 'LEA',\n    lpAddresses: {\n      97: '0x1a9e2f5404040e178E663D3853982dA1321A46e0',\n      56: '0x0DF910D3ab7CAFE09f30377Feaa4643DE300474f',\n    },\n    tokenSymbol: 'EGG',\n    tokenAddresses: {\n      97: '0x72B8Eb75ecAB5bB8a75adE4605F3ca4C3E73ab63',\n      56: '0x0e505a3296a8048132A2d31815F44cEc37aB485D',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 5,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBNB',\n    lpAddresses: {\n      97: '',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    tokenSymbol: 'WBNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 6,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'BUSD',\n    lpAddresses: {\n      97: '0x4a6ccbe26c62aa118da6f83ad41d0f49c66194f8',\n      56: '0x0DF910D3ab7CAFE09f30377Feaa4643DE300474f', // EGG-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0x78867bbeef44f2326bf8ddd1941a4439382ef2a7',\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  // {\n  //   pid: 15,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'USDT',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd', // USDT-BUSD LP\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 16,\n  //   risk: 2,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'BTCB',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb8875e207ee8096a929d543c9981c9586992eacb', // BTCB-BUSD LP\n  //   },\n  //   tokenSymbol: 'BTCB',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 17,\n  //   risk: 2,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'ETH',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494', // ETH-BUSD LP\n  //   },\n  //   tokenSymbol: 'ETH',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 18,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'DAI',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 19,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'USDC',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18', // USDC-BUSD LP\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 20,\n  //   risk: 3,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'DOT',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x54c1ec2f543966953f2f7564692606ea7d5a184e', // DOT-BUSD LP\n  //   },\n  //   tokenSymbol: 'DOT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  {\n    pid: 7,\n    risk: 4,\n    isTokenOnly: true,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6', // CAKE-BUSD LP\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  // {\n  //   pid: 22,\n  //   risk: 3,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'BSCX',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa32a983a64ce21834221aa0ad1f1533907553136', // BSCX-BUSD LP\n  //   },\n  //   tokenSymbol: 'BSCX',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 23,\n  //   risk: 3,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'AUTO',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4d0228ebeb39f6d2f29ba528e2d15fc9121ead56', // AUTO-BNB LP\n  //   },\n  //   tokenSymbol: 'AUTO',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa184088a740c695e156f91f5cc086a06bb78b827',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n]\n\nexport default farms\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Poppins', sans-serif;\n    -webkit-font-smoothing: initial;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n    .sc-laZMeE .sc-eCApnc{\n      display:none !important\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  // ZHCN,\n  // ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n  const lightTheme = {\n    ...light,\n    button: {\n      ...light.button,\n      primary: {\n        ...light.button.primary,\n        background: '#36b54e',\n        backgroundActive: '#36b54e',\n        backgroundHover: '#36b54e',\n      },\n      text: {\n        ...light.button.text,\n        color: '#36b54e',\n      },\n      tertiary: {\n        ...light.button.tertiary,\n        color: '#36b54e',\n      },\n      secondary: {\n        ...light.button.secondary,\n        color: '#36b54e',\n      },\n      subtle: {\n        ...light.button.subtle,\n        background: '#36b54e',\n        backgroundActive: '#36b54eD9',\n        backgroundHover: '#36b54eB3',\n      },\n    },\n    colors: {\n      ...light.colors,\n      primary: '#36b54e',\n      primaryBright: '#36b54e',\n      primaryDark: '#2f793e',\n      textSubtle: '#36b54e',\n      secondary: '#2f793e',\n      text: '#206c2e',\n    },\n  }\n  const darkTheme = {\n    ...dark,\n    button: {\n      ...dark.button,\n      primary: {\n        ...dark.button.primary,\n        background: '#36b54e',\n        backgroundActive: '#36b54e',\n        backgroundHover: '#36b54e',\n      },\n      text: {\n        ...dark.button.text,\n        color: '#36b54e',\n      },\n      tertiary: {\n        ...dark.button.tertiary,\n        color: '#36b54e',\n      },\n      secondary: {\n        ...dark.button.secondary,\n        color: '#36b54e',\n      },\n      subtle: {\n        ...dark.button.subtle,\n        background: '#36b54e',\n        backgroundActive: '#36b54eD9',\n        backgroundHover: '#36b54eB3',\n      },\n    },\n    colors: {\n      ...dark.colors,\n      primary: '#36b54e',\n      primaryBright: '#36b54e',\n      primaryDark: '#2f793e',\n      // textSubtle: '#36b54e',\n      secondary: '#2f793e',\n      // text: '#206c2e',\n    },\n  }\n  console.log({ lightTheme, darkTheme })\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      {/* <SCThemeProvider theme={lightTheme}>{children}</SCThemeProvider> */}\n      <SCThemeProvider theme={isDark ? darkTheme : lightTheme}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://exchange.hopperswap.io/#/swap',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://exchange.hopperswap.io/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: 'Pools',\n  //   icon: 'PoolIcon',\n  //   href: '/pools',\n  // },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: 'NFT',\n  //   icon: 'NftIcon',\n  //   href: '/nft',\n  // },\n  // {\n  //   label: 'Info',\n  //   icon: 'InfoIcon',\n  //   items: [\n  //     {\n  //       label: 'PancakeSwap',\n  //       href: 'https://pancakeswap.info/token/0xF952Fc3ca7325Cc27D15885d37117676d25BfdA6',\n  //     },\n  //     {\n  //       label: 'CoinGecko',\n  //       href: 'https://www.coingecko.com/en/coins/goose-finance',\n  //     },\n  //     {\n  //       label: 'CoinMarketCap',\n  //       href: 'https://coinmarketcap.com/currencies/goose-finance/',\n  //     },\n  //     {\n  //       label: 'AstroTools',\n  //       href: 'https://app.astrotools.io/pancake-pair-explorer/0x19e7cbecdd23a16dfa5573df54d98f7caae03019',\n  //     },\n  //   ],\n  // },\n  {\n    label: 'Socials',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Telegram',\n        href: 'https://t.me/hopperswap',\n      },\n      {\n        label: 'Twitter',\n        href: 'https://twitter.com/hopper_swap',\n      },\n      {\n        label: 'Facebook',\n        href: 'https://www.facebook.com/hopperswap',\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/hopperswap/hopperswap',\n      },\n      {\n        label: 'Instagram',\n        href: 'https://www.instagram.com/hopper_swap/',\n      },\n      {\n        label: 'Reddit',\n        href: 'https://www.reddit.com/user/hopperswap',\n      },\n      {\n        label: 'Medium',\n        href: 'https://medium.com/@hopperswap',\n      },\n      {\n        label: 'Discord',\n        href: 'https://discord.gg/54hdTjqCrt',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Info',\n        href: 'https://hopper-swap-dex.gitbook.io/hopper-swap/',\n      },\n      {\n        label: 'Road Map',\n        href: '',\n      },\n      {\n        label: 'NFT (Soon..)',\n        href: '',\n      },\n      {\n        label: 'LaunchPad (Soon..)',\n        href: '',\n      },\n      {\n        label: 'Prediction (Soon..)',\n        href: '',\n      },\n    ],\n  },\n\n  // {\n  //   label: 'Partnerships/IFO',\n  //   icon: 'GooseIcon',\n  //   href: '/ifo',\n  // },\n  // {\n  //   label: 'Audit by Hacken',\n  //   icon: 'AuditIcon',\n  //   href: 'https://www.goosedefi.com/files/hackenAudit.pdf',\n  // },\n  // {\n  //   label: 'Audit by CertiK',\n  //   icon: 'AuditIcon',\n  //   href: 'https://certik.org/projects/goose-finance',\n  // },\n]\n\nexport default config\n","import React, { useContext, useEffect, useLayoutEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  // useLayoutEffect(() => {\n  //   const footer = document.querySelector('.sc-hTRkXV .sc-laZMeE.eoGRqQ')\n  //   const oldLink: any = document.querySelector('.sc-hTRkXV .sc-eCApnc')\n  //   console.log(oldLink)\n  //   const node = document.createElement('div')\n  //   // oldLink.setAttribute('style', 'display:none')\n  //   node.innerHTML =\n  //     '<div> <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"google.com\" aria-label=\"Twitter\" color=\"primary\" className=\"\" > <svg viewBox=\"0 0 24 24\" width=\"24px\" color=\"textSubtle\" xmlns=\"http://www.w3.org/2000/svg\" className=\"sc-bdnxRM bWDKTy\" style={{ cursor:  \"pointer\" }} > <path d=\"M12 3C7.02985 3 3 7.02985 3 11.9904C3 16.9606 7.02985 21 12 21C16.9701 21 21 16.9606 21 11.9904C21 7.02985 16.9701 3 12 3ZM16.4328 8.65139C16.3753 9.48614 14.8305 15.7228 14.8305 15.7228C14.8305 15.7228 14.7345 16.0874 14.3987 16.097C14.2836 16.097 14.1301 16.0874 13.9574 15.9243C13.6023 15.6269 12.7964 15.0512 12.0384 14.5235C12.0096 14.5522 11.9808 14.581 11.9424 14.6098C11.7697 14.7633 11.5107 14.984 11.2324 15.2527C11.1269 15.3486 11.0117 15.4542 10.8966 15.5693L10.887 15.5789C10.8198 15.6461 10.7623 15.694 10.7143 15.7324C10.3401 16.0394 10.3017 15.7804 10.3017 15.6461L10.5032 13.4488V13.4296L10.5128 13.4104C10.5224 13.3817 10.5416 13.3721 10.5416 13.3721C10.5416 13.3721 14.4659 9.87953 14.5714 9.50533C14.581 9.48614 14.5522 9.46695 14.5043 9.48614C14.2452 9.57249 9.72601 12.4318 9.22708 12.7484C9.19829 12.7676 9.11194 12.758 9.11194 12.758L6.91471 12.0384C6.91471 12.0384 6.65565 11.9328 6.742 11.693C6.76119 11.645 6.78998 11.597 6.89552 11.5299C7.38486 11.1844 15.8955 8.12367 15.8955 8.12367C15.8955 8.12367 16.1354 8.04691 16.2793 8.09488C16.3465 8.12367 16.3849 8.15245 16.4232 8.2484C16.4328 8.28678 16.4424 8.36354 16.4424 8.44989C16.4424 8.49787 16.4328 8.55544 16.4328 8.65139Z\" /> </svg> </a> <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"google.com\" aria-label=\"Twitter\" color=\"primary\" className=\"sc-gtsrHT sc-lmgQwP cDkTsF fYKDnH\" > <svg viewBox=\"0 0 24 24\" width=\"24px\" color=\"textSubtle\" xmlns=\"http://www.w3.org/2000/svg\" className=\"sc-bdnxRM dqAsmU\" style={{ cursor:  \"pointer\" }} > <path d=\"M8.65854 19C15.4488 19 19.1659 13.2338 19.1659 8.23717C19.1659 8.07728 19.1659 7.91739 19.1561 7.7475C19.878 7.21785 20.5024 6.5483 21 5.78881C20.3366 6.08861 19.6244 6.28847 18.8732 6.38841C19.6341 5.91872 20.2195 5.17921 20.5024 4.28981C19.7902 4.72951 19 5.03931 18.1512 5.20919C17.478 4.45969 16.522 4 15.4585 4C13.4195 4 11.761 5.69887 11.761 7.78747C11.761 8.08728 11.8 8.36709 11.8585 8.6469C8.79512 8.497 6.07317 6.97801 4.24878 4.68954C3.92683 5.25916 3.75122 5.90873 3.75122 6.59827C3.75122 7.90739 4.40488 9.06662 5.39024 9.74617C4.78537 9.72618 4.21951 9.5563 3.72195 9.27648C3.72195 9.28648 3.72195 9.30646 3.72195 9.32645C3.72195 11.1552 5 12.6942 6.67805 13.034C6.36585 13.1239 6.0439 13.1639 5.70244 13.1639C5.46829 13.1639 5.23415 13.1439 5.00976 13.0939C5.47805 14.6029 6.8439 15.6922 8.46341 15.7222C7.19512 16.7415 5.60488 17.3411 3.87805 17.3411C3.58537 17.3411 3.28293 17.3311 3 17.2911C4.62927 18.3704 6.57073 19 8.65854 19Z\" /> </svg> </a> <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"google.com\" aria-label=\"Reddit\" color=\"primary\" className=\"sc-gtsrHT sc-lmgQwP cDHLmx fYKDnH\" > <svg viewBox=\"0 0 24 24\" width=\"24px\" color=\"textSubtle\" xmlns=\"http://www.w3.org/2000/svg\" className=\"sc-bdnxRM dqAsmU\" style={{ cursor:  \"pointer\" }} > <path d=\"m21.325 9.308c-.758 0-1.425.319-1.916.816-1.805-1.268-4.239-2.084-6.936-2.171l1.401-6.406 4.461 1.016c0 1.108.89 2.013 1.982 2.013 1.113 0 2.008-.929 2.008-2.038s-.889-2.038-2.007-2.038c-.779 0-1.451.477-1.786 1.129l-4.927-1.108c-.248-.067-.491.113-.557.365l-1.538 7.062c-2.676.113-5.084.928-6.895 2.197-.491-.518-1.184-.837-1.942-.837-2.812 0-3.733 3.829-1.158 5.138-.091.405-.132.837-.132 1.268 0 4.301 4.775 7.786 10.638 7.786 5.888 0 10.663-3.485 10.663-7.786 0-.431-.045-.883-.156-1.289 2.523-1.314 1.594-5.115-1.203-5.117zm-15.724 5.41c0-1.129.89-2.038 2.008-2.038 1.092 0 1.983.903 1.983 2.038 0 1.109-.89 2.013-1.983 2.013-1.113.005-2.008-.904-2.008-2.013zm10.839 4.798c-1.841 1.868-7.036 1.868-8.878 0-.203-.18-.203-.498 0-.703.177-.18.491-.18.668 0 1.406 1.463 6.07 1.488 7.537 0 .177-.18.491-.18.668 0 .207.206.207.524.005.703zm-.041-2.781c-1.092 0-1.982-.903-1.982-2.011 0-1.129.89-2.038 1.982-2.038 1.113 0 2.008.903 2.008 2.038-.005 1.103-.895 2.011-2.008 2.011z\" /> </svg> </a> </div>'\n\n  //   footer.appendChild(node)\n  // }, [])\n\n  return (\n    <>\n      <UikitMenu\n        account={account}\n        login={connect}\n        logout={reset}\n        isDark={isDark}\n        toggleTheme={toggleTheme}\n        currentLang={selectedLanguage && selectedLanguage.code}\n        langs={allLanguages}\n        setLang={setSelectedLanguage}\n        cakePriceUsd={cakePriceUsd.toNumber()}\n        links={config}\n        priceLink=\"\"\n        {...props}\n      />\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n// import NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode />\n            </Route>\n            {/* <Route path=\"/pools\"> */}\n            {/*  <Pools /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      {/* <NftGlobalNotification /> */}\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n"],"sourceRoot":""}